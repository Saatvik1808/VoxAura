{"ast":null,"code":"import React,{useContext,useEffect}from\"react\";import{Col,ListGroup,Row}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import{AppContext}from\"../context/appContext\";import{addNotifications,resetNotifications}from\"../features/userSlice\";import\"./Sidebar.css\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Sidebar(){var user=useSelector(function(state){return state.user;});var dispatch=useDispatch();var _useContext=useContext(AppContext),socket=_useContext.socket,setMembers=_useContext.setMembers,members=_useContext.members,setCurrentRoom=_useContext.setCurrentRoom,setRooms=_useContext.setRooms,privateMemberMsg=_useContext.privateMemberMsg,rooms=_useContext.rooms,setPrivateMemberMsg=_useContext.setPrivateMemberMsg,currentRoom=_useContext.currentRoom;function joinRoom(room){var isPublic=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(!user){return alert(\"Please login\");}socket.emit(\"join-room\",room,currentRoom);setCurrentRoom(room);if(isPublic){setPrivateMemberMsg(null);}// dispatch for notifications\ndispatch(resetNotifications(room));}socket.off(\"notifications\").on(\"notifications\",function(room){if(currentRoom!=room)dispatch(addNotifications(room));});useEffect(function(){if(user){setCurrentRoom(\"general\");getRooms();socket.emit(\"join-room\",\"general\");socket.emit(\"new-user\");}},[]);socket.off(\"new-user\").on(\"new-user\",function(payload){setMembers(payload);});function getRooms(){fetch(\"http://localhost:5001/rooms\").then(function(res){return res.json();}).then(function(data){return setRooms(data);});}function orderIds(id1,id2){if(id1>id2){return id1+\"-\"+id2;}else{return id2+\"-\"+id1;}}function handlePrivateMemberMsg(member){setPrivateMemberMsg(member);var roomId=orderIds(user._id,member._id);joinRoom(roomId,false);}if(!user){return/*#__PURE__*/_jsx(_Fragment,{});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Available rooms\"}),/*#__PURE__*/_jsx(ListGroup,{children:rooms.map(function(room,idx){return/*#__PURE__*/_jsxs(ListGroup.Item,{onClick:function onClick(){return joinRoom(room);},active:room==currentRoom,style:{cursor:\"pointer\",display:\"flex\",justifyContent:\"space-between\"},children:[room,\" \",currentRoom!==room&&/*#__PURE__*/_jsx(\"span\",{className:\"badge rounded-pill bg-primary\",children:user.newMessages[room]})]},idx);})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Members\"}),members.map(function(member){return/*#__PURE__*/_jsx(ListGroup.Item,{style:{cursor:\"pointer\"},active:(privateMemberMsg===null||privateMemberMsg===void 0?void 0:privateMemberMsg._id)==(member===null||member===void 0?void 0:member._id),onClick:function onClick(){return handlePrivateMemberMsg(member);},disabled:member._id===user._id,children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xs:2,className:\"member-status\",children:[/*#__PURE__*/_jsx(\"img\",{src:member.picture,className:\"member-status-img\"}),member.status==\"online\"?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-circle sidebar-online-status\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-circle sidebar-offline-status\"})]}),/*#__PURE__*/_jsxs(Col,{xs:9,children:[member.name,member._id===(user===null||user===void 0?void 0:user._id)&&\" (You)\",member.status==\"offline\"&&\" (Offline)\"]}),/*#__PURE__*/_jsx(Col,{xs:1,children:/*#__PURE__*/_jsx(\"span\",{className:\"badge rounded-pill bg-primary\",children:user.newMessages[orderIds(member._id,user._id)]})})]})},member.id);})]});}export default Sidebar;","map":{"version":3,"sources":["/Users/saatvikshrivastava/Downloads/chat/client/src/components/Sidebar.js"],"names":["React","useContext","useEffect","Col","ListGroup","Row","useDispatch","useSelector","AppContext","addNotifications","resetNotifications","Sidebar","user","state","dispatch","socket","setMembers","members","setCurrentRoom","setRooms","privateMemberMsg","rooms","setPrivateMemberMsg","currentRoom","joinRoom","room","isPublic","alert","emit","off","on","getRooms","payload","fetch","then","res","json","data","orderIds","id1","id2","handlePrivateMemberMsg","member","roomId","_id","map","idx","cursor","display","justifyContent","newMessages","picture","status","name","id"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\n\nfunction Sidebar() {\n    const user = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n    const { socket, setMembers, members, setCurrentRoom, setRooms, privateMemberMsg, rooms, setPrivateMemberMsg, currentRoom } = useContext(AppContext);\n\n    function joinRoom(room, isPublic = true) {\n        if (!user) {\n            return alert(\"Please login\");\n        }\n        socket.emit(\"join-room\", room, currentRoom);\n        setCurrentRoom(room);\n\n        if (isPublic) {\n            setPrivateMemberMsg(null);\n        }\n        // dispatch for notifications\n        dispatch(resetNotifications(room));\n    }\n\n    socket.off(\"notifications\").on(\"notifications\", (room) => {\n        if (currentRoom != room) dispatch(addNotifications(room));\n    });\n\n    useEffect(() => {\n        if (user) {\n            setCurrentRoom(\"general\");\n            getRooms();\n            socket.emit(\"join-room\", \"general\");\n            socket.emit(\"new-user\");\n        }\n    }, []);\n\n    socket.off(\"new-user\").on(\"new-user\", (payload) => {\n        setMembers(payload);\n    });\n\n    function getRooms() {\n        fetch(\"http://localhost:5001/rooms\")\n            .then((res) => res.json())\n            .then((data) => setRooms(data));\n    }\n\n    function orderIds(id1, id2) {\n        if (id1 > id2) {\n            return id1 + \"-\" + id2;\n        } else {\n            return id2 + \"-\" + id1;\n        }\n    }\n\n    function handlePrivateMemberMsg(member) {\n        setPrivateMemberMsg(member);\n        const roomId = orderIds(user._id, member._id);\n        joinRoom(roomId, false);\n    }\n\n    if (!user) {\n        return <></>;\n    }\n    return (\n        <>\n            <h2>Available rooms</h2>\n            <ListGroup>\n                {rooms.map((room, idx) => (\n                    <ListGroup.Item key={idx} onClick={() => joinRoom(room)} active={room == currentRoom} style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}>\n                        {room} {currentRoom !== room && <span className=\"badge rounded-pill bg-primary\">{user.newMessages[room]}</span>}\n                    </ListGroup.Item>\n                ))}\n            </ListGroup>\n            <h2>Members</h2>\n            {members.map((member) => (\n                <ListGroup.Item key={member.id} style={{ cursor: \"pointer\" }} active={privateMemberMsg?._id == member?._id} onClick={() => handlePrivateMemberMsg(member)} disabled={member._id === user._id}>\n                    <Row>\n                        <Col xs={2} className=\"member-status\">\n                            <img src={member.picture} className=\"member-status-img\" />\n                            {member.status == \"online\" ? <i className=\"fas fa-circle sidebar-online-status\"></i> : <i className=\"fas fa-circle sidebar-offline-status\"></i>}\n                        </Col>\n                        <Col xs={9}>\n                            {member.name}\n                            {member._id === user?._id && \" (You)\"}\n                            {member.status == \"offline\" && \" (Offline)\"}\n                        </Col>\n                        <Col xs={1}>\n                            <span className=\"badge rounded-pill bg-primary\">{user.newMessages[orderIds(member._id, user._id)]}</span>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            ))}\n        </>\n    );\n}\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}