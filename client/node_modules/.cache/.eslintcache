[{"/Users/saatvikshrivastava/Downloads/chat/client/src/index.js":"1","/Users/saatvikshrivastava/Downloads/chat/client/src/App.js":"2","/Users/saatvikshrivastava/Downloads/chat/client/src/reportWebVitals.js":"3","/Users/saatvikshrivastava/Downloads/chat/client/src/store.js":"4","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Home.js":"5","/Users/saatvikshrivastava/Downloads/chat/client/src/components/Navigation.js":"6","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Signup.js":"7","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Chat.js":"8","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Login.js":"9","/Users/saatvikshrivastava/Downloads/chat/client/src/features/userSlice.js":"10","/Users/saatvikshrivastava/Downloads/chat/client/src/context/appContext.js":"11","/Users/saatvikshrivastava/Downloads/chat/client/src/services/appApi.js":"12","/Users/saatvikshrivastava/Downloads/chat/client/src/components/Sidebar.js":"13","/Users/saatvikshrivastava/Downloads/chat/client/src/components/MessageForm.js":"14"},{"size":948,"mtime":1654431732000,"results":"15","hashOfConfig":"16"},{"size":1627,"mtime":1654431732000,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1654431732000,"results":"18","hashOfConfig":"16"},{"size":784,"mtime":1654431732000,"results":"19","hashOfConfig":"16"},{"size":1050,"mtime":1691244169071,"results":"20","hashOfConfig":"16"},{"size":2128,"mtime":1691244678274,"results":"21","hashOfConfig":"16"},{"size":4738,"mtime":1691234373360,"results":"22","hashOfConfig":"16"},{"size":493,"mtime":1654431732000,"results":"23","hashOfConfig":"16"},{"size":2542,"mtime":1691233987173,"results":"24","hashOfConfig":"16"},{"size":1131,"mtime":1654431732000,"results":"25","hashOfConfig":"16"},{"size":212,"mtime":1654431732000,"results":"26","hashOfConfig":"16"},{"size":1062,"mtime":1654431732000,"results":"27","hashOfConfig":"16"},{"size":3715,"mtime":1654431732000,"results":"28","hashOfConfig":"16"},{"size":4673,"mtime":1691237865238,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f9rhyn",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saatvikshrivastava/Downloads/chat/client/src/index.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/App.js",["77"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Chat from \"./pages/Chat\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { AppContext, socket } from \"./context/appContext\";\n\nfunction App() {\n    const [rooms, setRooms] = useState([]);\n    const [currentRoom, setCurrentRoom] = useState([]);\n    const [members, setMembers] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [privateMemberMsg, setPrivateMemberMsg] = useState({});\n    const [newMessages, setNewMessages] = useState({});\n    const user = useSelector((state) => state.user);\n    return (\n        <AppContext.Provider value={{ socket, currentRoom, setCurrentRoom, members, setMembers, messages, setMessages, privateMemberMsg, setPrivateMemberMsg, rooms, setRooms, newMessages, setNewMessages }}>\n            <BrowserRouter>\n                <Navigation />\n                <Routes>\n                    <Route path=\"/\" element={<Home />} />\n                    {!user && (\n                        <>\n                            <Route path=\"/login\" element={<Login />} />\n                            <Route path=\"/signup\" element={<Signup />} />\n                        </>\n                    )}\n                    <Route path=\"/chat\" element={<Chat />} />\n                </Routes>\n            </BrowserRouter>\n        </AppContext.Provider>\n    );\n}\n\nexport default App;\n","/Users/saatvikshrivastava/Downloads/chat/client/src/reportWebVitals.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/store.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Home.js",[],[],["78","79"],"/Users/saatvikshrivastava/Downloads/chat/client/src/components/Navigation.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Signup.js",["80"],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Chat.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Login.js",["81","82"],[],"import React, { useContext, useState } from \"react\";\nimport { Col, Container, Form, Row, Button, Spinner } from \"react-bootstrap\";\nimport { useLoginUserMutation } from \"../services/appApi\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { AppContext } from \"../context/appContext\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const { socket } = useContext(AppContext);\n  const [loginUser, { isLoading, error }] = useLoginUserMutation();\n  function handleLogin(e) {\n    e.preventDefault();\n    // login logic\n    loginUser({ email, password }).then(({ data }) => {\n      if (data) {\n        // socket work\n        socket.emit(\"new-user\");\n        // navigate to the chat\n        navigate(\"/chat\");\n      }\n    });\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col md={5} className=\"login__bg\"></Col>\n        <Col\n          md={7}\n          className=\"d-flex align-items-center justify-content-center\"\n        >\n          <div className=\"login-form-container\">\n            <form className=\"login-form\" onSubmit={handleLogin}>\n              <h1 className=\"login-form-title\">Login</h1>\n              <div className=\"login-form-group\">\n                {error && <p className=\"alert alert-danger\">{error.data}</p>}\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  required\n                />\n              </div>\n\n              <div className=\"login-form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  required\n                />\n              </div>\n\n              <button className=\"login-button\" type=\"submit\">\n                {isLoading ? (\n                  <Spinner animation=\"border\" size=\"sm\" className=\"spinner\" />\n                ) : (\n                  \"Login\"\n                )}\n              </button>\n\n              <div className=\"login-form-footer\">\n                Don't have an account? <Link to=\"/signup\">Signup</Link>\n              </div>\n            </form>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n",["83","84"],"/Users/saatvikshrivastava/Downloads/chat/client/src/features/userSlice.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/context/appContext.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/services/appApi.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/components/Sidebar.js",["85","86","87","88","89","90","91"],[],"import React, { useContext, useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\n\nfunction Sidebar() {\n    const user = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n    const { socket, setMembers, members, setCurrentRoom, setRooms, privateMemberMsg, rooms, setPrivateMemberMsg, currentRoom } = useContext(AppContext);\n\n    function joinRoom(room, isPublic = true) {\n        if (!user) {\n            return alert(\"Please login\");\n        }\n        socket.emit(\"join-room\", room, currentRoom);\n        setCurrentRoom(room);\n\n        if (isPublic) {\n            setPrivateMemberMsg(null);\n        }\n        // dispatch for notifications\n        dispatch(resetNotifications(room));\n    }\n\n    socket.off(\"notifications\").on(\"notifications\", (room) => {\n        if (currentRoom != room) dispatch(addNotifications(room));\n    });\n\n    useEffect(() => {\n        if (user) {\n            setCurrentRoom(\"general\");\n            getRooms();\n            socket.emit(\"join-room\", \"general\");\n            socket.emit(\"new-user\");\n        }\n    }, []);\n\n    socket.off(\"new-user\").on(\"new-user\", (payload) => {\n        setMembers(payload);\n    });\n\n    function getRooms() {\n        fetch(\"http://localhost:5001/rooms\")\n            .then((res) => res.json())\n            .then((data) => setRooms(data));\n    }\n\n    function orderIds(id1, id2) {\n        if (id1 > id2) {\n            return id1 + \"-\" + id2;\n        } else {\n            return id2 + \"-\" + id1;\n        }\n    }\n\n    function handlePrivateMemberMsg(member) {\n        setPrivateMemberMsg(member);\n        const roomId = orderIds(user._id, member._id);\n        joinRoom(roomId, false);\n    }\n\n    if (!user) {\n        return <></>;\n    }\n    return (\n        <>\n            <h2>Available rooms</h2>\n            <ListGroup>\n                {rooms.map((room, idx) => (\n                    <ListGroup.Item key={idx} onClick={() => joinRoom(room)} active={room == currentRoom} style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}>\n                        {room} {currentRoom !== room && <span className=\"badge rounded-pill bg-primary\">{user.newMessages[room]}</span>}\n                    </ListGroup.Item>\n                ))}\n            </ListGroup>\n            <h2>Members</h2>\n            {members.map((member) => (\n                <ListGroup.Item key={member.id} style={{ cursor: \"pointer\" }} active={privateMemberMsg?._id == member?._id} onClick={() => handlePrivateMemberMsg(member)} disabled={member._id === user._id}>\n                    <Row>\n                        <Col xs={2} className=\"member-status\">\n                            <img src={member.picture} className=\"member-status-img\" />\n                            {member.status == \"online\" ? <i className=\"fas fa-circle sidebar-online-status\"></i> : <i className=\"fas fa-circle sidebar-offline-status\"></i>}\n                        </Col>\n                        <Col xs={9}>\n                            {member.name}\n                            {member._id === user?._id && \" (You)\"}\n                            {member.status == \"offline\" && \" (Offline)\"}\n                        </Col>\n                        <Col xs={1}>\n                            <span className=\"badge rounded-pill bg-primary\">{user.newMessages[orderIds(member._id, user._id)]}</span>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            ))}\n        </>\n    );\n}\n\nexport default Sidebar;\n","/Users/saatvikshrivastava/Downloads/chat/client/src/components/MessageForm.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":12},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":69,"column":29,"nodeType":"102","endLine":69,"endColumn":96},{"ruleId":"92","severity":1,"message":"103","line":2,"column":26,"nodeType":"94","messageId":"95","endLine":2,"endColumn":30},{"ruleId":"92","severity":1,"message":"104","line":2,"column":37,"nodeType":"94","messageId":"95","endLine":2,"endColumn":43},{"ruleId":"96","replacedBy":"105"},{"ruleId":"98","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":28,"column":25,"nodeType":"109","messageId":"110","endLine":28,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":38,"column":8,"nodeType":"113","endLine":38,"endColumn":10,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"115","line":72,"column":91,"nodeType":"109","messageId":"110","endLine":72,"endColumn":93},{"ruleId":"107","severity":1,"message":"115","line":79,"column":109,"nodeType":"109","messageId":"110","endLine":79,"endColumn":111},{"ruleId":"100","severity":1,"message":"101","line":82,"column":29,"nodeType":"102","endLine":82,"endColumn":87},{"ruleId":"107","severity":1,"message":"115","line":83,"column":44,"nodeType":"109","messageId":"110","endLine":83,"endColumn":46},{"ruleId":"107","severity":1,"message":"115","line":88,"column":44,"nodeType":"109","messageId":"110","endLine":88,"endColumn":46},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'Button' is defined but never used.",["116"],["117"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRooms', 'setCurrentRoom', 'socket', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["118"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [getRooms, setCurrentRoom, socket, user]",{"range":"121","text":"122"},[1298,1300],"[getRooms, setCurrentRoom, socket, user]"]