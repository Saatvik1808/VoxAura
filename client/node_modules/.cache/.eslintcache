[{"/Users/saatvikshrivastava/Downloads/chat/client/src/index.js":"1","/Users/saatvikshrivastava/Downloads/chat/client/src/App.js":"2","/Users/saatvikshrivastava/Downloads/chat/client/src/reportWebVitals.js":"3","/Users/saatvikshrivastava/Downloads/chat/client/src/store.js":"4","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Home.js":"5","/Users/saatvikshrivastava/Downloads/chat/client/src/components/Navigation.js":"6","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Signup.js":"7","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Chat.js":"8","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Login.js":"9","/Users/saatvikshrivastava/Downloads/chat/client/src/features/userSlice.js":"10","/Users/saatvikshrivastava/Downloads/chat/client/src/context/appContext.js":"11","/Users/saatvikshrivastava/Downloads/chat/client/src/services/appApi.js":"12","/Users/saatvikshrivastava/Downloads/chat/client/src/components/Sidebar.js":"13","/Users/saatvikshrivastava/Downloads/chat/client/src/components/MessageForm.js":"14"},{"size":948,"mtime":1654431732000,"results":"15","hashOfConfig":"16"},{"size":1597,"mtime":1691275273442,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1654431732000,"results":"18","hashOfConfig":"16"},{"size":784,"mtime":1654431732000,"results":"19","hashOfConfig":"16"},{"size":1050,"mtime":1691244169071,"results":"20","hashOfConfig":"16"},{"size":2128,"mtime":1691244678274,"results":"21","hashOfConfig":"16"},{"size":4738,"mtime":1691234373360,"results":"22","hashOfConfig":"16"},{"size":493,"mtime":1654431732000,"results":"23","hashOfConfig":"16"},{"size":2542,"mtime":1691233987173,"results":"24","hashOfConfig":"16"},{"size":1131,"mtime":1654431732000,"results":"25","hashOfConfig":"16"},{"size":222,"mtime":1691290016821,"results":"26","hashOfConfig":"16"},{"size":1072,"mtime":1691290138315,"results":"27","hashOfConfig":"16"},{"size":3725,"mtime":1691289999264,"results":"28","hashOfConfig":"16"},{"size":4673,"mtime":1691237865238,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f9rhyn",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saatvikshrivastava/Downloads/chat/client/src/index.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/App.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/reportWebVitals.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/store.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Home.js",[],[],["76","77"],"/Users/saatvikshrivastava/Downloads/chat/client/src/components/Navigation.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Signup.js",["78"],[],"import React, { useState } from \"react\";\nimport { Col, Container, Form, Row, Button } from \"react-bootstrap\";\nimport { useSignupUserMutation } from \"../services/appApi\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Signup.css\";\nimport botImg from \"../assets/bot.jpeg\";\n\nfunction Signup() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [signupUser, { isLoading, error }] = useSignupUserMutation();\n    const navigate = useNavigate();\n    //image upload states\n    const [image, setImage] = useState(null);\n    const [upladingImg, setUploadingImg] = useState(false);\n    const [imagePreview, setImagePreview] = useState(null);\n\n    function validateImg(e) {\n        const file = e.target.files[0];\n        if (file.size >= 1048576) {\n            return alert(\"Max file size is 1mb\");\n        } else {\n            setImage(file);\n            setImagePreview(URL.createObjectURL(file));\n        }\n    }\n\n    async function uploadImage() {\n        const data = new FormData();\n        data.append(\"file\", image);\n        data.append(\"upload_preset\", \"ubaqqddo\");\n        try {\n            setUploadingImg(true);\n            let res = await fetch(\"https://api.cloudinary.com/v1_1/dutz9pnhl/image/upload\", {\n                method: \"post\",\n                body: data,\n            });\n            const urlData = await res.json();\n            setUploadingImg(false);\n            return urlData.url;\n        } catch (error) {\n            setUploadingImg(false);\n            console.log(error);\n        }\n    }\n\n    async function handleSignup(e) {\n        e.preventDefault();\n        if (!image) return alert(\"Please upload your profile picture\");\n        const url = await uploadImage(image);\n        console.log(url);\n        // signup the user\n        signupUser({ name, email, password, picture: url }).then(({ data }) => {\n            if (data) {\n                console.log(data);\n                navigate(\"/chat\");\n            }\n        });\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col md={7} className=\"d-flex align-items-center justify-content-center flex-direction-column\">\n                    <Form style={{ width: \"80%\", maxWidth: 500 }} onSubmit={handleSignup}>\n                        <h1 className=\"text-center\">Create account</h1>\n                        <div className=\"signup-profile-pic__container\">\n                            <img src={imagePreview || botImg} className=\"signup-profile-pic\" />\n                            <label htmlFor=\"image-upload\" className=\"image-upload-label\">\n                                <i className=\"fas fa-plus-circle add-picture-icon\"></i>\n                            </label>\n                            <input type=\"file\" id=\"image-upload\" hidden accept=\"image/png, image/jpeg\" onChange={validateImg} />\n                        </div>\n                        {error && <p className=\"alert alert-danger\">{error.data}</p>}\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Your name\" onChange={(e) => setName(e.target.value)} value={name} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={(e) => setEmail(e.target.value)} value={email} />\n                            <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} value={password} />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            {upladingImg || isLoading ? \"Signing you up...\" : \"Signup\"}\n                        </Button>\n                        <div className=\"py-4\">\n                            <p className=\"text-center\">\n                                Already have an account ? <Link to=\"/login\">Login</Link>\n                            </p>\n                        </div>\n                    </Form>\n                </Col>\n                <Col md={5} className=\"signup__bg\"></Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Signup;\n","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Chat.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Login.js",["79","80"],[],"import React, { useContext, useState } from \"react\";\nimport { Col, Container, Form, Row, Button, Spinner } from \"react-bootstrap\";\nimport { useLoginUserMutation } from \"../services/appApi\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { AppContext } from \"../context/appContext\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const { socket } = useContext(AppContext);\n  const [loginUser, { isLoading, error }] = useLoginUserMutation();\n  function handleLogin(e) {\n    e.preventDefault();\n    // login logic\n    loginUser({ email, password }).then(({ data }) => {\n      if (data) {\n        // socket work\n        socket.emit(\"new-user\");\n        // navigate to the chat\n        navigate(\"/chat\");\n      }\n    });\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col md={5} className=\"login__bg\"></Col>\n        <Col\n          md={7}\n          className=\"d-flex align-items-center justify-content-center\"\n        >\n          <div className=\"login-form-container\">\n            <form className=\"login-form\" onSubmit={handleLogin}>\n              <h1 className=\"login-form-title\">Login</h1>\n              <div className=\"login-form-group\">\n                {error && <p className=\"alert alert-danger\">{error.data}</p>}\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  required\n                />\n              </div>\n\n              <div className=\"login-form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  required\n                />\n              </div>\n\n              <button className=\"login-button\" type=\"submit\">\n                {isLoading ? (\n                  <Spinner animation=\"border\" size=\"sm\" className=\"spinner\" />\n                ) : (\n                  \"Login\"\n                )}\n              </button>\n\n              <div className=\"login-form-footer\">\n                Don't have an account? <Link to=\"/signup\">Signup</Link>\n              </div>\n            </form>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Login;\n",["81","82"],"/Users/saatvikshrivastava/Downloads/chat/client/src/features/userSlice.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/context/appContext.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/services/appApi.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/components/Sidebar.js",["83","84","85","86","87","88","89"],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/components/MessageForm.js",[],[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":69,"column":29,"nodeType":"96","endLine":69,"endColumn":96},{"ruleId":"97","severity":1,"message":"98","line":2,"column":26,"nodeType":"99","messageId":"100","endLine":2,"endColumn":30},{"ruleId":"97","severity":1,"message":"101","line":2,"column":37,"nodeType":"99","messageId":"100","endLine":2,"endColumn":43},{"ruleId":"90","replacedBy":"102"},{"ruleId":"92","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":28,"column":25,"nodeType":"106","messageId":"107","endLine":28,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":38,"column":8,"nodeType":"110","endLine":38,"endColumn":10,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"112","line":72,"column":91,"nodeType":"106","messageId":"107","endLine":72,"endColumn":93},{"ruleId":"104","severity":1,"message":"112","line":79,"column":109,"nodeType":"106","messageId":"107","endLine":79,"endColumn":111},{"ruleId":"94","severity":1,"message":"95","line":82,"column":29,"nodeType":"96","endLine":82,"endColumn":87},{"ruleId":"104","severity":1,"message":"112","line":83,"column":44,"nodeType":"106","messageId":"107","endLine":83,"endColumn":46},{"ruleId":"104","severity":1,"message":"112","line":88,"column":44,"nodeType":"106","messageId":"107","endLine":88,"endColumn":46},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.",["113"],["114"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRooms', 'setCurrentRoom', 'socket', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["115"],"Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [getRooms, setCurrentRoom, socket, user]",{"range":"118","text":"119"},[1298,1300],"[getRooms, setCurrentRoom, socket, user]"]