[{"/Users/saatvikshrivastava/Downloads/chat/client/src/index.js":"1","/Users/saatvikshrivastava/Downloads/chat/client/src/App.js":"2","/Users/saatvikshrivastava/Downloads/chat/client/src/reportWebVitals.js":"3","/Users/saatvikshrivastava/Downloads/chat/client/src/store.js":"4","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Home.js":"5","/Users/saatvikshrivastava/Downloads/chat/client/src/components/Navigation.js":"6","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Signup.js":"7","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Chat.js":"8","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Login.js":"9","/Users/saatvikshrivastava/Downloads/chat/client/src/features/userSlice.js":"10","/Users/saatvikshrivastava/Downloads/chat/client/src/context/appContext.js":"11","/Users/saatvikshrivastava/Downloads/chat/client/src/services/appApi.js":"12","/Users/saatvikshrivastava/Downloads/chat/client/src/components/Sidebar.js":"13","/Users/saatvikshrivastava/Downloads/chat/client/src/components/MessageForm.js":"14"},{"size":948,"mtime":1654431732000,"results":"15","hashOfConfig":"16"},{"size":1627,"mtime":1654431732000,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1654431732000,"results":"18","hashOfConfig":"16"},{"size":784,"mtime":1654431732000,"results":"19","hashOfConfig":"16"},{"size":866,"mtime":1654431732000,"results":"20","hashOfConfig":"16"},{"size":2756,"mtime":1654431732000,"results":"21","hashOfConfig":"16"},{"size":4738,"mtime":1691206566082,"results":"22","hashOfConfig":"16"},{"size":493,"mtime":1654431732000,"results":"23","hashOfConfig":"16"},{"size":2687,"mtime":1654431732000,"results":"24","hashOfConfig":"16"},{"size":1131,"mtime":1654431732000,"results":"25","hashOfConfig":"16"},{"size":212,"mtime":1654431732000,"results":"26","hashOfConfig":"16"},{"size":1062,"mtime":1654431732000,"results":"27","hashOfConfig":"16"},{"size":3715,"mtime":1654431732000,"results":"28","hashOfConfig":"16"},{"size":4572,"mtime":1654431732000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f9rhyn",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"/Users/saatvikshrivastava/Downloads/chat/client/src/index.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/App.js",["77"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Chat from \"./pages/Chat\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { AppContext, socket } from \"./context/appContext\";\n\nfunction App() {\n    const [rooms, setRooms] = useState([]);\n    const [currentRoom, setCurrentRoom] = useState([]);\n    const [members, setMembers] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [privateMemberMsg, setPrivateMemberMsg] = useState({});\n    const [newMessages, setNewMessages] = useState({});\n    const user = useSelector((state) => state.user);\n    return (\n        <AppContext.Provider value={{ socket, currentRoom, setCurrentRoom, members, setMembers, messages, setMessages, privateMemberMsg, setPrivateMemberMsg, rooms, setRooms, newMessages, setNewMessages }}>\n            <BrowserRouter>\n                <Navigation />\n                <Routes>\n                    <Route path=\"/\" element={<Home />} />\n                    {!user && (\n                        <>\n                            <Route path=\"/login\" element={<Login />} />\n                            <Route path=\"/signup\" element={<Signup />} />\n                        </>\n                    )}\n                    <Route path=\"/chat\" element={<Chat />} />\n                </Routes>\n            </BrowserRouter>\n        </AppContext.Provider>\n    );\n}\n\nexport default App;\n","/Users/saatvikshrivastava/Downloads/chat/client/src/reportWebVitals.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/store.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Home.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/components/Navigation.js",["78","79"],[],"import React from \"react\";\nimport { Nav, Navbar, Container, Button, NavDropdown } from \"react-bootstrap\";\nimport { useLogoutUserMutation } from \"../services/appApi\";\nimport { useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport logo from \"../assets/logo.png\";\nfunction Navigation() {\n    const user = useSelector((state) => state.user);\n    const [logoutUser] = useLogoutUserMutation();\n    async function handleLogout(e) {\n        e.preventDefault();\n        await logoutUser(user);\n        // redirect to home page\n        window.location.replace(\"/\");\n    }\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Container>\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand>\n                        <img src={logo} style={{ width: 50, height: 50 }} />\n                    </Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ms-auto\">\n                        {!user && (\n                            <LinkContainer to=\"/login\">\n                                <Nav.Link>Login</Nav.Link>\n                            </LinkContainer>\n                        )}\n                        <LinkContainer to=\"/chat\">\n                            <Nav.Link>Chat</Nav.Link>\n                        </LinkContainer>\n                        {user && (\n                            <NavDropdown\n                                title={\n                                    <>\n                                        <img src={user.picture} style={{ width: 30, height: 30, marginRight: 10, objectFit: \"cover\", borderRadius: \"50%\" }} />\n                                        {user.name}\n                                    </>\n                                }\n                                id=\"basic-nav-dropdown\"\n                            >\n                                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n\n                                <NavDropdown.Item>\n                                    <Button variant=\"danger\" onClick={handleLogout}>\n                                        Logout\n                                    </Button>\n                                </NavDropdown.Item>\n                            </NavDropdown>\n                        )}\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default Navigation;\n","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Signup.js",["80"],[],"import React, { useState } from \"react\";\nimport { Col, Container, Form, Row, Button } from \"react-bootstrap\";\nimport { useSignupUserMutation } from \"../services/appApi\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./Signup.css\";\nimport botImg from \"../assets/bot.jpeg\";\n\nfunction Signup() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [signupUser, { isLoading, error }] = useSignupUserMutation();\n    const navigate = useNavigate();\n    //image upload states\n    const [image, setImage] = useState(null);\n    const [upladingImg, setUploadingImg] = useState(false);\n    const [imagePreview, setImagePreview] = useState(null);\n\n    function validateImg(e) {\n        const file = e.target.files[0];\n        if (file.size >= 1048576) {\n            return alert(\"Max file size is 1mb\");\n        } else {\n            setImage(file);\n            setImagePreview(URL.createObjectURL(file));\n        }\n    }\n\n    async function uploadImage() {\n        const data = new FormData();\n        data.append(\"file\", image);\n        data.append(\"upload_preset\", \"ubaqqddo\");\n        try {\n            setUploadingImg(true);\n            let res = await fetch(\"https://api.cloudinary.com/v1_1/dutz9pnhl/image/upload\", {\n                method: \"post\",\n                body: data,\n            });\n            const urlData = await res.json();\n            setUploadingImg(false);\n            return urlData.url;\n        } catch (error) {\n            setUploadingImg(false);\n            console.log(error);\n        }\n    }\n\n    async function handleSignup(e) {\n        e.preventDefault();\n        if (!image) return alert(\"Please upload your profile picture\");\n        const url = await uploadImage(image);\n        console.log(url);\n        // signup the user\n        signupUser({ name, email, password, picture: url }).then(({ data }) => {\n            if (data) {\n                console.log(data);\n                navigate(\"/chat\");\n            }\n        });\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col md={7} className=\"d-flex align-items-center justify-content-center flex-direction-column\">\n                    <Form style={{ width: \"80%\", maxWidth: 500 }} onSubmit={handleSignup}>\n                        <h1 className=\"text-center\">Create account</h1>\n                        <div className=\"signup-profile-pic__container\">\n                            <img src={imagePreview || botImg} className=\"signup-profile-pic\" />\n                            <label htmlFor=\"image-upload\" className=\"image-upload-label\">\n                                <i className=\"fas fa-plus-circle add-picture-icon\"></i>\n                            </label>\n                            <input type=\"file\" id=\"image-upload\" hidden accept=\"image/png, image/jpeg\" onChange={validateImg} />\n                        </div>\n                        {error && <p className=\"alert alert-danger\">{error.data}</p>}\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Your name\" onChange={(e) => setName(e.target.value)} value={name} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={(e) => setEmail(e.target.value)} value={email} />\n                            <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} value={password} />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            {upladingImg || isLoading ? \"Signing you up...\" : \"Signup\"}\n                        </Button>\n                        <div className=\"py-4\">\n                            <p className=\"text-center\">\n                                Already have an account ? <Link to=\"/login\">Login</Link>\n                            </p>\n                        </div>\n                    </Form>\n                </Col>\n                <Col md={5} className=\"signup__bg\"></Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Signup;\n","/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Chat.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/pages/Login.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/features/userSlice.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/context/appContext.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/services/appApi.js",[],[],"/Users/saatvikshrivastava/Downloads/chat/client/src/components/Sidebar.js",["81","82","83","84","85","86","87"],[],"import React, { useContext, useEffect } from \"react\";\nimport { Col, ListGroup, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport { addNotifications, resetNotifications } from \"../features/userSlice\";\nimport \"./Sidebar.css\";\n\nfunction Sidebar() {\n    const user = useSelector((state) => state.user);\n    const dispatch = useDispatch();\n    const { socket, setMembers, members, setCurrentRoom, setRooms, privateMemberMsg, rooms, setPrivateMemberMsg, currentRoom } = useContext(AppContext);\n\n    function joinRoom(room, isPublic = true) {\n        if (!user) {\n            return alert(\"Please login\");\n        }\n        socket.emit(\"join-room\", room, currentRoom);\n        setCurrentRoom(room);\n\n        if (isPublic) {\n            setPrivateMemberMsg(null);\n        }\n        // dispatch for notifications\n        dispatch(resetNotifications(room));\n    }\n\n    socket.off(\"notifications\").on(\"notifications\", (room) => {\n        if (currentRoom != room) dispatch(addNotifications(room));\n    });\n\n    useEffect(() => {\n        if (user) {\n            setCurrentRoom(\"general\");\n            getRooms();\n            socket.emit(\"join-room\", \"general\");\n            socket.emit(\"new-user\");\n        }\n    }, []);\n\n    socket.off(\"new-user\").on(\"new-user\", (payload) => {\n        setMembers(payload);\n    });\n\n    function getRooms() {\n        fetch(\"http://localhost:5001/rooms\")\n            .then((res) => res.json())\n            .then((data) => setRooms(data));\n    }\n\n    function orderIds(id1, id2) {\n        if (id1 > id2) {\n            return id1 + \"-\" + id2;\n        } else {\n            return id2 + \"-\" + id1;\n        }\n    }\n\n    function handlePrivateMemberMsg(member) {\n        setPrivateMemberMsg(member);\n        const roomId = orderIds(user._id, member._id);\n        joinRoom(roomId, false);\n    }\n\n    if (!user) {\n        return <></>;\n    }\n    return (\n        <>\n            <h2>Available rooms</h2>\n            <ListGroup>\n                {rooms.map((room, idx) => (\n                    <ListGroup.Item key={idx} onClick={() => joinRoom(room)} active={room == currentRoom} style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"space-between\" }}>\n                        {room} {currentRoom !== room && <span className=\"badge rounded-pill bg-primary\">{user.newMessages[room]}</span>}\n                    </ListGroup.Item>\n                ))}\n            </ListGroup>\n            <h2>Members</h2>\n            {members.map((member) => (\n                <ListGroup.Item key={member.id} style={{ cursor: \"pointer\" }} active={privateMemberMsg?._id == member?._id} onClick={() => handlePrivateMemberMsg(member)} disabled={member._id === user._id}>\n                    <Row>\n                        <Col xs={2} className=\"member-status\">\n                            <img src={member.picture} className=\"member-status-img\" />\n                            {member.status == \"online\" ? <i className=\"fas fa-circle sidebar-online-status\"></i> : <i className=\"fas fa-circle sidebar-offline-status\"></i>}\n                        </Col>\n                        <Col xs={9}>\n                            {member.name}\n                            {member._id === user?._id && \" (You)\"}\n                            {member.status == \"offline\" && \" (Offline)\"}\n                        </Col>\n                        <Col xs={1}>\n                            <span className=\"badge rounded-pill bg-primary\">{user.newMessages[orderIds(member._id, user._id)]}</span>\n                        </Col>\n                    </Row>\n                </ListGroup.Item>\n            ))}\n        </>\n    );\n}\n\nexport default Sidebar;\n","/Users/saatvikshrivastava/Downloads/chat/client/src/components/MessageForm.js",["88","89","90","91","92"],[],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { AppContext } from \"../context/appContext\";\nimport \"./MessageForm.css\";\nfunction MessageForm() {\n    const [message, setMessage] = useState(\"\");\n    const user = useSelector((state) => state.user);\n    const { socket, currentRoom, setMessages, messages, privateMemberMsg } = useContext(AppContext);\n    const messageEndRef = useRef(null);\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    function getFormattedDate() {\n        const date = new Date();\n        const year = date.getFullYear();\n        let month = (1 + date.getMonth()).toString();\n\n        month = month.length > 1 ? month : \"0\" + month;\n        let day = date.getDate().toString();\n\n        day = day.length > 1 ? day : \"0\" + day;\n\n        return month + \"/\" + day + \"/\" + year;\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n    }\n\n    function scrollToBottom() {\n        messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    const todayDate = getFormattedDate();\n\n    socket.off(\"room-messages\").on(\"room-messages\", (roomMessages) => {\n        setMessages(roomMessages);\n    });\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (!message) return;\n        const today = new Date();\n        const minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\n        const time = today.getHours() + \":\" + minutes;\n        const roomId = currentRoom;\n        socket.emit(\"message-room\", roomId, message, user, time, todayDate);\n        setMessage(\"\");\n    }\n    return (\n        <>\n            <div className=\"messages-output\">\n                {user && !privateMemberMsg?._id && <div className=\"alert alert-info\">You are in the {currentRoom} room</div>}\n                {user && privateMemberMsg?._id && (\n                    <>\n                        <div className=\"alert alert-info conversation-info\">\n                            <div>\n                                Your conversation with {privateMemberMsg.name} <img src={privateMemberMsg.picture} className=\"conversation-profile-pic\" />\n                            </div>\n                        </div>\n                    </>\n                )}\n                {!user && <div className=\"alert alert-danger\">Please login</div>}\n\n                {user &&\n                    messages.map(({ _id: date, messagesByDate }, idx) => (\n                        <div key={idx}>\n                            <p className=\"alert alert-info text-center message-date-indicator\">{date}</p>\n                            {messagesByDate?.map(({ content, time, from: sender }, msgIdx) => (\n                                <div className={sender?.email == user?.email ? \"message\" : \"incoming-message\"} key={msgIdx}>\n                                    <div className=\"message-inner\">\n                                        <div className=\"d-flex align-items-center mb-3\">\n                                            <img src={sender.picture} style={{ width: 35, height: 35, objectFit: \"cover\", borderRadius: \"50%\", marginRight: 10 }} />\n                                            <p className=\"message-sender\">{sender._id == user?._id ? \"You\" : sender.name}</p>\n                                        </div>\n                                        <p className=\"message-content\">{content}</p>\n                                        <p className=\"message-timestamp-left\">{time}</p>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n                <div ref={messageEndRef} />\n            </div>\n            <Form onSubmit={handleSubmit}>\n                <Row>\n                    <Col md={11}>\n                        <Form.Group>\n                            <Form.Control type=\"text\" placeholder=\"Your message\" disabled={!user} value={message} onChange={(e) => setMessage(e.target.value)}></Form.Control>\n                        </Form.Group>\n                    </Col>\n                    <Col md={1}>\n                        <Button variant=\"primary\" type=\"submit\" style={{ width: \"100%\", backgroundColor: \"orange\" }} disabled={!user}>\n                            <i className=\"fas fa-paper-plane\"></i>\n                        </Button>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nexport default MessageForm;\n",{"ruleId":"93","severity":1,"message":"94","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":12},{"ruleId":"97","severity":1,"message":"98","line":21,"column":25,"nodeType":"99","endLine":21,"endColumn":77},{"ruleId":"97","severity":1,"message":"98","line":39,"column":41,"nodeType":"99","endLine":39,"endColumn":159},{"ruleId":"97","severity":1,"message":"98","line":69,"column":29,"nodeType":"99","endLine":69,"endColumn":96},{"ruleId":"100","severity":1,"message":"101","line":28,"column":25,"nodeType":"102","messageId":"103","endLine":28,"endColumn":27},{"ruleId":"104","severity":1,"message":"105","line":38,"column":8,"nodeType":"106","endLine":38,"endColumn":10,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"108","line":72,"column":91,"nodeType":"102","messageId":"103","endLine":72,"endColumn":93},{"ruleId":"100","severity":1,"message":"108","line":79,"column":109,"nodeType":"102","messageId":"103","endLine":79,"endColumn":111},{"ruleId":"97","severity":1,"message":"98","line":82,"column":29,"nodeType":"99","endLine":82,"endColumn":87},{"ruleId":"100","severity":1,"message":"108","line":83,"column":44,"nodeType":"102","messageId":"103","endLine":83,"endColumn":46},{"ruleId":"100","severity":1,"message":"108","line":88,"column":44,"nodeType":"102","messageId":"103","endLine":88,"endColumn":46},{"ruleId":"109","severity":1,"message":"110","line":42,"column":14,"nodeType":"95","messageId":"111","endLine":42,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":60,"column":80,"nodeType":"99","endLine":60,"endColumn":155},{"ruleId":"100","severity":1,"message":"108","line":72,"column":63,"nodeType":"102","messageId":"103","endLine":72,"endColumn":65},{"ruleId":"97","severity":1,"message":"98","line":75,"column":45,"nodeType":"99","endLine":75,"endColumn":165},{"ruleId":"100","severity":1,"message":"108","line":76,"column":87,"nodeType":"102","messageId":"103","endLine":76,"endColumn":89},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRooms', 'setCurrentRoom', 'socket', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["112"],"Expected '===' and instead saw '=='.","no-redeclare","'handleSubmit' is already defined.","redeclared",{"desc":"113","fix":"114"},"Update the dependencies array to be: [getRooms, setCurrentRoom, socket, user]",{"range":"115","text":"116"},[1298,1300],"[getRooms, setCurrentRoom, socket, user]"]